name: Enemy.sh Deploy

on:
  workflow_call:
    inputs:
      container-app-environment-id:
        description: 'Container App Environment ID'
        required: true
        type: string 

      container-app-environment-static-ip-address:
        description: 'Container App Environment Static IP Address'
        required: true
        type: string

      resource-group-name:
        description: 'Resource Group Name'
        required: true
        type: string
      
      subscription-id:
        description: 'Azure Subscription ID'
        required: true
        type: string
      
      client-id:
        description: 'Azure Client ID'
        required: true
        type: string
      
    secrets:
      github-token:
        description: 'Github Token'
        required: true

      client-secret:
        description: 'Azure Client Secret'
        required: true
      
      tenant-id:
        description: 'Azure Tenant ID'
        required: true
      
      auth-secret:
        description: 'Auth Secret'

      twenty-api-key:
        description: 'API key for twenty.com'
      
env:
  CR_PAT: ${{ secrets.github-token}}
  ARM_CLIENT_ID: ${{ inputs.client-id }}
  ARM_CLIENT_SECRET: ${{ secrets.client-secret }}
  ARM_SUBSCRIPTION_ID: ${{ inputs.subscription-id }}
  ARM_TENANT_ID: ${{ secrets.tenant-id }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

      - uses: docker/setup-docker-action@v4

      - name: build & push
        run: |
          echo $CR_PAT | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    defaults:
      run:
        working-directory: ./Terraform
    env:
      TF_VAR_container_app_environment_static_ip_address: ${{ inputs.container-app-environment-static-ip-address }}
      TF_VAR_container_app_environment_id: ${{ inputs.container-app-environment-id }}
      TF_VAR_image: ghcr.io/${{ github.repository }}:${{ github.sha }}
      TF_VAR_resource_group_name: ${{ inputs.resource-group-name }}
      TF_VAR_subscription_id: ${{ inputs.subscription-id }}
      TF_VAR_github_token: ${{ secrets.github-token }}
      TF_VAR_auth_secret: ${{ secrets.auth-secret }}
      TF_VAR_twenty_api_key: ${{ secrets.TWENTY_API_KEY }}
      TF_VAR_registry_username: ${{ github.actor }}
      TF_VAR_sha: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
        name: checkout
        with:
          repository: ${{ github.repository }}
      
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: terraform init
        run: terraform init -backend-config=backend.hcl
      
      - name: extract repository name & set tfvars
        run: |
          echo "WORKSPACE_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
          echo "TF_VAR_repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: select terraform workspace
        run: | 
          if ! terraform workspace select $WORKSPACE_NAME 2>/dev/null; then
            terraform workspace new $WORKSPACE_NAME
          fi

      - name: terraform plan
        run: terraform plan --var-file=terraform.tfvars -out tfplan
        
      - name: terraform apply
        run: terraform apply --var-file=terraform.tfvars -input=false tfplan
